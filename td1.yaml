openapi: 3.1.0
info:
  title: Library Management API
  version: 1.0.0
servers:
  - url: https://localhost.std23009.com
paths:
  /books:
    get:
      description: Get all books, with optional filters for name or release date range.
      parameters:
        - name: bookName
          in: query
          schema:
            type: string
        - name: releaseDateStart
          in: query
          description: Start date for release date filter (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: releaseDateEnd
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    post:
      description: Add a new book.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created successfully

    put:
      description: Update book details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated successfully

    delete:
      summary: Delete a book
      description: Remove a book by its ID.
      parameters:
        - name: bookId
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Book deleted successfully

  /authors:
    get:
      description: Get all authors, with optional name filters.
      parameters:
        - name: authorName
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

    post:
      description: Add a new author.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Author created successfully

    put:
      description: Update author details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Author updated successfully

    delete:
      description: Remove an author by their ID.
      parameters:
        - name: authorId
          in: query
          schema:
            type: string
      responses:
        '204':
          description: Author deleted successfully

components:
  schemas:
    Book:
      type: object
      required:
        - ID
        - bookName
        - author
        - pageNumbers
        - topic
        - releaseDate
      properties:
        ID:
          type: string
        bookName:
          type: string
        author:
          type: string
          description: Name of the author
        pageNumbers:
          type: integer
          description: Number of pages in the book
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
          description: Release date of the book

    Author:
      type: object
      required:
        - ID
        - Name
        - Sex
      properties:
        ID:
          type: string
        Name:
          type: string
        Sex:
          type: string
          enum:
            - M
            - F
